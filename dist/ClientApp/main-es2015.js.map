{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/components/forgot-password/forgot-password.component.html","./src/app/components/sign-up/sign-up.component.html","./src/app/components/verify-email/verify-email.component.html","./src/app/core/components/confirm-dialog/confirm-dialog.component.html","./src/app/core/components/dashboard/dashboard.component.html","./src/app/core/components/nav/nav.component.html","./src/app/core/components/snackbar/snack-bar.component.html","(webpack)/buildin/global.js","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/forgot-password/forgot-password.component.css","./src/app/components/forgot-password/forgot-password.component.ts","./src/app/components/sign-up/sign-up.component.css","./src/app/components/sign-up/sign-up.component.ts","./src/app/components/verify-email/verify-email.component.css","./src/app/components/verify-email/verify-email.component.ts","./src/app/core/components/confirm-dialog/confirm-dialog.component.css","./src/app/core/components/confirm-dialog/confirm-dialog.component.ts","./src/app/core/components/dashboard/dashboard.component.css","./src/app/core/components/dashboard/dashboard.component.ts","./src/app/core/components/nav/nav.component.css","./src/app/core/components/nav/nav.component.ts","./src/app/core/components/snackbar/snack-bar.component.css","./src/app/core/components/snackbar/snack-bar.component.ts","./src/app/core/containers/not-found-page.component.ts","./src/app/core/core.module.ts","./src/app/core/guards/index.ts","./src/app/core/guards/ipfs-connect.guard.ts","./src/app/core/guards/metamask-connect.guard.ts","./src/app/core/models/index.ts","./src/app/core/models/snack-bar.model.ts","./src/app/core/services/app-error-handler.service.ts","./src/app/core/services/ethers-web3-provider-service.ts","./src/app/core/services/http-error.interceptor.ts","./src/app/core/services/ipfs-daemon.services.ts","./src/app/core/services/snack-bar.service.ts","./src/app/core/services/spinner-overlay.service.ts","./src/app/core/services/tokens/ethereum-provider-token.ts","./src/app/core/services/tokens/index.ts","./src/app/core/services/tokens/ipfs-token.ts","./src/app/core/services/tokens/window-token.ts","./src/app/core/store/actions/error.actions.ts","./src/app/core/store/actions/index.ts","./src/app/core/store/actions/ipfs-daemon.actions.ts","./src/app/core/store/actions/snack-bar.action.ts","./src/app/core/store/actions/spinner.actions.ts","./src/app/core/store/actions/web3-gateway.actions.ts","./src/app/core/store/effects/error.effects.ts","./src/app/core/store/effects/index.ts","./src/app/core/store/effects/ipfs-daemon.effects.ts","./src/app/core/store/effects/snack-bar.effects.ts","./src/app/core/store/effects/spinner.effects.ts","./src/app/core/store/effects/web3-gateway.effects.ts","./src/app/core/store/index.ts","./src/app/core/store/reducers/error.reducer.ts","./src/app/core/store/reducers/index.ts","./src/app/core/store/reducers/ipfs-daemon.reducer.ts","./src/app/core/store/reducers/spinner.reducer.ts","./src/app/core/store/reducers/web3-gateway.reducer.ts","./src/app/market-place/services/authentication.service.ts","./src/app/shared/angular-cdk/angular-sdk.module.ts","./src/app/shared/angular-cdk/index.ts","./src/app/shared/flex-layout/index.ts","./src/app/shared/index.ts","./src/app/shared/material/index.ts","./src/app/shared/material/material.module.ts","./src/environments/environment.ts","./src/main.ts","ipfs-utils/src/files/glob-source (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div class=\\\"displayTable\\\">\\n    <div class=\\\"displayTableCell\\\">\\n      <div class=\\\"authBlock\\\">\\n        <h3>Reset Password</h3>\\n  \\n        <p class=\\\"text-center\\\">Please enter your email address to request a password reset.</p>\\n  \\n        <div class=\\\"formGroup\\\">\\n          <input type=\\\"email\\\" class=\\\"formControl\\\" placeholder=\\\"Email Address\\\" #passwordResetEmail required>\\n        </div>\\n  \\n        <!-- Calling ForgotPassword from AuthService Api -->\\n        <div class=\\\"formGroup\\\">\\n          <input type=\\\"submit\\\" class=\\\"btn btnPrimary\\\" value=\\\"Reset Password\\\" (click)=\\\"authService.ForgotPassword(passwordResetEmail.value)\\\">\\n        </div>\\n      </div>\\n  \\n      <div class=\\\"redirectToLogin\\\">\\n        <span>Go back to ? <span class=\\\"redirect\\\" routerLink=\\\"/sign-in\\\">Log In</span></span>\\n      </div>\\n  \\n    </div>\\n  </div>\";","export default \"<div class=\\\"displayTable\\\">\\n    <div class=\\\"displayTableCell\\\">\\n  \\n      <div class=\\\"authBlock\\\">\\n        <h3>Sign Up</h3>\\n  \\n        <div class=\\\"formGroup\\\">\\n          <input type=\\\"email\\\" class=\\\"formControl\\\" placeholder=\\\"Email Address\\\" #userEmail required>\\n        </div>\\n  \\n        <div class=\\\"formGroup\\\">\\n          <input type=\\\"password\\\" class=\\\"formControl\\\" placeholder=\\\"Password\\\" #userPwd required>\\n        </div>\\n  \\n        <div class=\\\"formGroup\\\">\\n          <input type=\\\"button\\\" class=\\\"btn btnPrimary\\\" value=\\\"Sign Up\\\" (click)=\\\"authService.SignUp(userEmail.value, userPwd.value)\\\">\\n        </div>\\n  \\n        <div class=\\\"formGroup\\\">\\n          <span class=\\\"or\\\"><span class=\\\"orInner\\\">Or</span></span>\\n        </div>\\n  \\n        <!-- Continue with Google -->\\n        <div class=\\\"formGroup\\\">\\n          <button type=\\\"button\\\" class=\\\"btn googleBtn\\\" (click)=\\\"authService.GoogleAuth()\\\">\\n            <i class=\\\"fab fa-google-plus-g\\\"></i>\\n            Continue with Google\\n          </button>\\n        </div>\\n  \\n        <!-- Continue with Facebook -->\\n        <div class=\\\"formGroup\\\">\\n          <button type=\\\"button\\\" class=\\\"btn facebookBtn\\\" (click)=\\\"authService.FacebookAuth()\\\">\\n            <i class=\\\"fab fa-facebook\\\"></i>\\n            Continue with Facebook\\n          </button>\\n        </div>\\n      </div>\\n  \\n      <div class=\\\"redirectToLogin\\\">\\n        <span>Already have an account? <span class=\\\"redirect\\\" routerLink=\\\"/sign-in\\\">Log In</span></span>\\n      </div>\\n    </div>\\n  \\n  </div>\";","export default \"<div class=\\\"displayTable\\\">\\n    <div class=\\\"displayTableCell\\\">\\n  \\n      <div class=\\\"authBlock\\\">\\n        <h3>Thank You for Registering</h3>\\n  \\n        <div class=\\\"formGroup\\\" *ngIf=\\\"authService.userData as user\\\">\\n          <p class=\\\"text-center\\\">We have sent a confirmation email to <strong>{{user.email}}</strong>.</p>\\n          <p class=\\\"text-center\\\">Please check your email and click on the link to verfiy your email address.</p>\\n        </div>\\n        \\n        <!-- Calling SendVerificationMail() method using authService Api -->\\n        <div class=\\\"formGroup\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btnPrimary\\\" (click)=\\\"authService.SendVerificationMail()\\\">\\n            <i class=\\\"fas fa-redo-alt\\\"></i>\\n            Resend Verification Email\\n          </button>\\n        </div>\\n  \\n      </div>\\n  \\n      <div class=\\\"redirectToLogin\\\">\\n        <span>Go back to?<span class=\\\"redirect\\\" routerLink=\\\"/sign-in\\\"> Sign in</span></span>\\n      </div>\\n  \\n    </div>\\n  </div>\";","export default \"\\n<h1 mat-dialog-title>{{data.title}}</h1>\\n<mat-dialog-content>\\n    {{data.content}}\\n</mat-dialog-content>\\n\\n<mat-dialog-actions>\\n    <button mat-stroked-button  (click)=\\\"onCancel()\\\">Cancel</button>\\n    <button mat-stroked-button color=\\\"warn\\\" (click)=\\\"onOk()\\\" cdkFocusInitial class=\\\"margin-left--16\\\">OK</button>\\n</mat-dialog-actions>\";","export default \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center start\\\">\\n\\n  <mat-card fxFlex=\\\"80\\\">\\n\\n    <mat-card-title class=\\\"text-center\\\">\\n        Welcome to Inventory Management System Dapp On the Ropsten Testnet\\n\\n    </mat-card-title>\\n\\n    <mat-card-content class=\\\"text-center\\\">\\n      Front-end user interface to Inventory Management Escrow Smart Contract\\n    </mat-card-content>\\n\\n    <mat-card-content fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around start\\\">\\n\\n      <img src=\\\"./assets/img/seller-256.png\\\" @dropPoke>\\n\\n      <img src=\\\"./assets/img/premium-128.png\\\" class='margin-top-58' @shakeHands>\\n\\n      <img src=\\\"./assets/img/buyer-256.png\\\" @dropPoke>\\n\\n    </mat-card-content>\\n\\n    <mat-card-footer fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around start\\\">\\n\\n      <div class=\\\"mat-body-1\\\">Producer</div>\\n\\n      <div></div>\\n\\n      <div class=\\\"mat-body-1\\\">Supplier</div>\\n\\n    </mat-card-footer>\\n\\n  </mat-card>\\n\\n</div>\\n<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\"\\n  *ngIf=\\\"{co: ethereumConnected$ | async, in: ethereumInjected$ | async} as o\\\">\\n  <button mat-raised-button class='margin-top-bottom--12' color=\\\"accent\\\" *ngIf=\\\"!o.co && o.in\\\" (click)=\\\"onConnect()\\\">\\n    Connect to Blockchain\\n  </button>\\n  <button mat-raised-button class='margin-top-bottom--12' color=\\\"warn\\\" *ngIf=\\\"o.co && o.in\\\" (click)=\\\"onDisconnect()\\\">\\n    Disconnect from Blockchain\\n  </button>\\n</div>\";","export default \"<div class=\\\"app-container\\\" >\\n  <mat-sidenav-container class=\\\"sidenav-container\\\">\\n    <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport=\\\"true\\\"\\n      [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\" [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n      [opened]=\\\"(isHandset$ | async) === false\\\">\\n      <mat-toolbar>Menu</mat-toolbar>\\n      <mat-nav-list>\\n\\n        <h3 matSubheader class='margin-top-bottom--12'>\\n          <a [routerLink]=\\\"nav['home'].link\\\" routerLinkActive=\\\"active-link\\\"\\n            [routerLinkActiveOptions]=\\\"{ exact: nav['home'].exact }\\\">\\n            <img src=\\\"{{nav['home'].img_src}}\\\">{{nav['home'].name}}\\n          </a>\\n        </h3>\\n        <mat-divider></mat-divider>\\n\\n        <h3 matSubheader class='margin-top-bottom--12'>\\n          <img src=\\\"{{nav['marketplace'].img_src}}\\\">{{nav['marketplace'].name}}\\n        </h3>\\n        <mat-list-item>\\n          <a [routerLink]=\\\"nav['marketplace_all_products'].link\\\" routerLinkActive=\\\"active-link\\\"\\n            [routerLinkActiveOptions]=\\\"{ exact: nav['marketplace_all_products'].exact }\\\">\\n            <img src=\\\"{{nav['marketplace_all_products'].img_src}}\\\">{{nav['marketplace_all_products'].name}}\\n          </a>\\n        </mat-list-item>\\n        <mat-list-item>\\n          <a [routerLink]=\\\"nav['marketplace_new_product'].link\\\" routerLinkActive=\\\"active-link\\\"\\n            [routerLinkActiveOptions]=\\\"{ exact: nav['marketplace_new_product'].exact }\\\">\\n            <img src=\\\"{{nav['marketplace_new_product'].img_src}}\\\">{{nav['marketplace_new_product'].name}}\\n          </a>\\n        </mat-list-item>\\n\\n        <mat-divider></mat-divider>\\n\\n      </mat-nav-list>\\n    </mat-sidenav>\\n    <mat-sidenav-content>\\n\\n      <mat-toolbar color=\\\"primary\\\" fxLayout=\\\"row\\\">\\n\\n        <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"drawer.toggle()\\\"\\n          *ngIf=\\\"(isHandset$ | async)\\\">\\n          <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n        </button>\\n\\n        <span fxFlex>\\n          <span fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n            <img src=\\\"./assets/img/ether-32.png\\\">\\n            Inventory Management DApp\\n          </span>\\n\\n        </span>\\n\\n        <div fxFlex=\\\"15\\\" *ngIf=\\\"balance$ | async as balance\\\">\\n          <span fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n            Balance:\\n            <mat-chip-list fxFlexOffset=\\\"10px\\\">\\n              <mat-chip color=\\\"accent\\\" selected>{{balance}}</mat-chip>\\n            </mat-chip-list>\\n          </span>\\n        </div>\\n\\n        <div fxFlex=\\\"15\\\" *ngIf=\\\"ipfsConnect$ | async as ipfsConnect\\\">\\n          <span fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n            IPFS Connect:\\n            <div fxFlexOffset=\\\"10px\\\" *ngIf=\\\"ipfsConnect\\\">🔵</div>\\n            <div fxFlexOffset=\\\"10px\\\" *ngIf=\\\"!ipfsConnect\\\">🔴</div>\\n          </span>\\n        </div>\\n\\n      </mat-toolbar>\\n\\n      <!-- Add Content Here -->\\n      <div class=\\\"context-container\\\">\\n        <router-outlet></router-outlet>\\n      </div>\\n\\n\\n    </mat-sidenav-content>\\n  </mat-sidenav-container>\\n\\n  <mat-toolbar fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n\\n    <div fxFlex=\\\"15\\\" *ngIf=\\\"network$ | async as network\\\">\\n      <span fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n        Network:\\n        <mat-chip-list fxFlexOffset=\\\"10px\\\">\\n          <mat-chip color=\\\"primary\\\" selected>{{network}}</mat-chip>\\n        </mat-chip-list>\\n      </span>\\n    </div>\\n\\n    <div fxFlex=\\\"30\\\">\\n      <span fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n        <img #blocky>\\n        <mat-chip-list fxFlexOffset=\\\"10px\\\" *ngIf=\\\"account$ | async as account\\\">\\n          <mat-chip color=\\\"primary\\\" selected>{{account}}</mat-chip>\\n        </mat-chip-list>\\n      </span>\\n\\n    </div>\\n\\n  </mat-toolbar>\\n\\n</div>\\n\\n\";","export default \"\\n<mat-card>\\n    <mat-card-subtitle>Notification Message</mat-card-subtitle>\\n    <mat-card-content>\\n        <p [ngClass]=\\\"{\\n            'accent-color': data.color == 'accent',\\n            'primary-color': data.color == 'primary',\\n            'red-color': data.color == 'warn'\\n            }\\\">\\n            {{data.message}}\\n        </p>\\n    </mat-card-content>\\n</mat-card>\\n\";","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { register } from 'ethers/utils/wordlist';\nimport { SignUpComponent } from '../app/components/sign-up/sign-up.component';\nimport { LoginComponent } from '../app/login/login.component';\nimport { ForgotPasswordComponent } from '../app/components/forgot-password/forgot-password.component';\nimport { VerifyEmailComponent } from '../app/components/verify-email/verify-email.component';\n\nimport { DashboardComponent } from './core/components/dashboard/dashboard.component';\nimport { NotFoundPageComponent } from './core/containers/not-found-page.component';\nimport { AuthGuard } from '../app/shared/guard/auth.guard';\n\n\n\nimport * as guards from './core/guards';\n\nexport const routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n  },\n  {\n    path: 'market-place',\n    // here we use the TypeScript Dynamic Imports in Angular 8\n    loadChildren: () => import('./market-place/market-place.module').then(mod => mod.MarketPlaceModule),\n    canLoad: [guards.MetaMaskConnectGuard, guards.IpfsConnectGuard],\n  },\n  { path: '**', component: NotFoundPageComponent }, // !!!has to be the last one\n\n];\n\n// to be able to reload on the same route\n// based on https://github.com/angular/angular/issues/13831\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true,  onSameUrlNavigation: 'reload' })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div>\n      <app-nav></app-nav>\n    </div>\n  `,\n  styles: []\n})\nexport class AppComponent {\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AngularFireModule } from \"@angular/fire\";\nimport { AngularFireAuthModule } from \"@angular/fire/auth\";\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\n\nimport { CoreModule } from './core/core.module';\nimport { environment } from '../environments/environment';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { VerifyEmailComponent } from './components/verify-email/verify-email.component';\n\n// import { LoginComponent } from './login/login.component';\n// import { RegisterComponent } from './register/register.component'; // Angular CLI environment\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignUpComponent,\n    ForgotPasswordComponent,\n    VerifyEmailComponent,\n    // LoginComponent,\n    // LoginComponent,\n    // RegisterComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CoreModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZm9yZ290LXBhc3N3b3JkL2ZvcmdvdC1wYXNzd29yZC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../market-place/services/authentication.service\";\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\n\nexport class ForgotPasswordComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit() {\n  }\n\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2lnbi11cC9zaWduLXVwLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../market-place/services/authentication.service\";\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\n\nexport class SignUpComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit() { }\n\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdmVyaWZ5LWVtYWlsL3ZlcmlmeS1lbWFpbC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../../market-place/services/authentication.service\";\n\n@Component({\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.component.html',\n  styleUrls: ['./verify-email.component.css']\n})\nexport class VerifyEmailComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit() {\n  }\n\n}","export default \"\\n.margin-left--16 {\\n    margin-left: 16px !important\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29yZS9jb21wb25lbnRzL2NvbmZpcm0tZGlhbG9nL2NvbmZpcm0tZGlhbG9nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0k7QUFDSiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvY29tcG9uZW50cy9jb25maXJtLWRpYWxvZy9jb25maXJtLWRpYWxvZy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4ubWFyZ2luLWxlZnQtLTE2IHtcbiAgICBtYXJnaW4tbGVmdDogMTZweCAhaW1wb3J0YW50XG59Il19 */\";","\nimport { ChangeDetectionStrategy, Component, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogData } from '../../models/dialog-data.interface';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-confirm-dialog',\n  templateUrl: 'confirm-dialog.component.html',\n  styleUrls: ['confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent {\n\n    constructor(\n        public dialogRef: MatDialogRef<ConfirmDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n    onCancel(): void {\n        this.dialogRef.close();\n    }\n\n    onOk(): void {\n        this.dialogRef.close(this.data.output ? this.data.output : 'Confirmed' );\n    }\n\n\n}\n","export default \"\\nimg{\\n  max-height:200px;\\n  max-width:200px;\\n  height:auto;\\n  width:auto;\\n}\\n\\n.margin-top-58 {\\n  margin-top: 58px !important\\n}\\n\\n.margin-top-bottom--12 {\\n  margin: 12px 0px !important;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29yZS9jb21wb25lbnRzL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7RUFDRSxnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLFdBQVc7RUFDWCxVQUFVO0FBQ1o7O0FBRUE7RUFDRTtBQUNGOztBQUVBO0VBQ0UsMkJBQTJCO0FBQzdCIiwiZmlsZSI6InNyYy9hcHAvY29yZS9jb21wb25lbnRzL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1ne1xuICBtYXgtaGVpZ2h0OjIwMHB4O1xuICBtYXgtd2lkdGg6MjAwcHg7XG4gIGhlaWdodDphdXRvO1xuICB3aWR0aDphdXRvO1xufVxuXG4ubWFyZ2luLXRvcC01OCB7XG4gIG1hcmdpbi10b3A6IDU4cHggIWltcG9ydGFudFxufVxuXG4ubWFyZ2luLXRvcC1ib3R0b20tLTEyIHtcbiAgbWFyZ2luOiAxMnB4IDBweCAhaW1wb3J0YW50O1xufVxuIl19 */\";","import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\nimport * as fromRoot from '../../store';\nimport { transition, style, animate, trigger } from '@angular/animations';\n\nexport const DROP_BUDDY_ANIMATION = trigger('dropPoke', [\n  transition(':enter', [   // alias for void => *\n    style({ transform: 'translateY(-200px)', opacity: 0 }),\n    animate(\n      '750ms cubic-bezier(1.000, 0.000, 0.000, 1.000)',\n      style({ transform: 'translateY(0)', opacity: 1 })\n    ),\n  ]),\n  /* no need\n  transition(':leave', [\n        style({ transform: 'translateY(0)', opacity: 1 }),\n        animate(\n            '200ms cubic-bezier(1.000, 0.000, 0.000, 1.000)',\n            style({ transform: 'translateY(-200px)', opacity: 0 })\n        ),\n    ]),\n  */\n\n]);\n\nexport const SHAKE_HANDS_ANIMATION = trigger('shakeHands', [\n  transition(':enter', [   // alias for void => *\n    style({ opacity: 0 }),\n    animate(\n      '1s 300ms ease-in',  // Duration is 1 sec, delay is 300 milliseconds, easing in\n      style({ opacity: 1 })\n    ),\n  ]),\n\n]);\n\n@Component({\n  selector: 'app-dashboard',\n  animations: [DROP_BUDDY_ANIMATION, SHAKE_HANDS_ANIMATION],\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  ethereumInjected$: Observable<boolean>;\n  ethereumConnected$: Observable<boolean>;\n\n  constructor(\n    private httpClient: HttpClient,\n    private store$: Store<fromRoot.AppState>\n  ) { }\n\n  ngOnInit() {\n    this.ethereumInjected$ = this.store$.pipe(select(fromRoot.getEthereumInjected));\n    this.ethereumConnected$ = this.store$.pipe(select(fromRoot.getEthereumConnected));\n  }\n\n  onConnect = () => this.store$.dispatch(fromRoot.Web3GatewayActions.ethereumConnect());\n  onDisconnect = () => this.store$.dispatch(fromRoot.Web3GatewayActions.ethereumDisconnect());\n\n  /*\n  onDisconnect = () => {\n    // error tester block\n    // throw new Error('deliberate client error');\n    const _emsg = 'deliberate server 401 error';\n    this.httpClient.get(_emsg).subscribe();\n  }\n  */\n\n}\n","export default \"\\n.app-container {\\n  display: flex;\\n  flex-direction: column;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n}\\n\\n.context-container {\\n  margin: 16px;\\n}\\n\\n.sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n}\\n\\n.sidenav .mat-toolbar {\\n  background: inherit;\\n}\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  z-index: 1;\\n}\\n\\n.mat-toolbar img {\\n  margin-right: 6px;\\n}\\n\\n.mat-nav-list img {\\n  margin-right: 4px;\\n}\\n\\n.toolbar-fill-remaining-space {\\n  /* This fills the remaining space, by using flexbox. \\n   Every toolbar row uses a flexbox row layout. */\\n  flex: 1 1 auto;\\n}\\n\\n.margin-top-bottom--12 {\\n  margin: 12px 0px !important;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29yZS9jb21wb25lbnRzL25hdi9uYXYuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sU0FBUztFQUNULE9BQU87RUFDUCxRQUFRO0FBQ1Y7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSx3QkFBZ0I7RUFBaEIsZ0JBQWdCO0VBQ2hCLE1BQU07RUFDTixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRTtpREFDK0M7RUFDL0MsY0FBYztBQUNoQjs7QUFFQTtFQUNFLDJCQUEyQjtBQUM3QiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvY29tcG9uZW50cy9uYXYvbmF2LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbi5hcHAtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG59XG5cbi5jb250ZXh0LWNvbnRhaW5lciB7XG4gIG1hcmdpbjogMTZweDtcbn1cblxuLnNpZGVuYXYtY29udGFpbmVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uc2lkZW5hdiB7XG4gIHdpZHRoOiAyMDBweDtcbn1cblxuLnNpZGVuYXYgLm1hdC10b29sYmFyIHtcbiAgYmFja2dyb3VuZDogaW5oZXJpdDtcbn1cblxuLm1hdC10b29sYmFyLm1hdC1wcmltYXJ5IHtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOiAwO1xuICB6LWluZGV4OiAxO1xufVxuXG4ubWF0LXRvb2xiYXIgaW1nIHtcbiAgbWFyZ2luLXJpZ2h0OiA2cHg7XG59XG5cbi5tYXQtbmF2LWxpc3QgaW1nIHtcbiAgbWFyZ2luLXJpZ2h0OiA0cHg7XG59XG5cbi50b29sYmFyLWZpbGwtcmVtYWluaW5nLXNwYWNlIHtcbiAgLyogVGhpcyBmaWxscyB0aGUgcmVtYWluaW5nIHNwYWNlLCBieSB1c2luZyBmbGV4Ym94LiBcbiAgIEV2ZXJ5IHRvb2xiYXIgcm93IHVzZXMgYSBmbGV4Ym94IHJvdyBsYXlvdXQuICovXG4gIGZsZXg6IDEgMSBhdXRvO1xufVxuXG4ubWFyZ2luLXRvcC1ib3R0b20tLTEyIHtcbiAgbWFyZ2luOiAxMnB4IDBweCAhaW1wb3J0YW50O1xufVxuIl19 */\";","import { Component, OnInit, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { tap, map, filter } from 'rxjs/operators';\nimport { Store, select } from '@ngrx/store';\nimport { create } from 'ethereum-blockies';\n\nimport * as fromRoot from '../../store/reducers';\nimport { INavInterface } from '../../models';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit, AfterViewInit {\n\n  @ViewChild('blocky') blockyRef: ElementRef;\n\n  nav: { [index: string]: INavInterface } = {\n    home:\n    {\n      link: '/dashboard',\n      name: 'Home',\n      img_src: './assets/img/home-start-32.png',\n      exact: true\n    },\n    marketplace:\n    {\n      link: '/market-place',\n      name: 'Marketplace',\n      img_src: './assets/img/negotiation-64.png',\n      exact: true\n    },\n    marketplace_all_products:\n    {\n      link: '/market-place',\n      name: 'All Products',\n      img_src: './assets/img/contract-list-24.png',\n      exact: true\n    },\n    marketplace_new_product:\n    {\n      link: '/market-place/products/make/new',\n      name: 'New Product',\n      img_src: './assets/img/new-contract-24.png',\n      exact: true\n    },\n\n  };\n\n  account$: Observable<string>;\n  network$: Observable<string>;\n  balance$: Observable<string>;\n  ipfsConnect$: Observable<boolean>;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map(result => result.matches));\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private store: Store<fromRoot.AppState>\n  ) { }\n\n  ngOnInit() {\n    this.network$ = this.store.pipe(select(fromRoot.getNetwork));\n    this.balance$ = this.store.pipe(\n      select(fromRoot.getBalance),\n      tap(balance => console.log(`Debug: got balance: ${balance}`))\n    );\n\n    this.ipfsConnect$ = this.store.pipe(\n      select(fromRoot.getIpfsConnectStatus),\n      tap(ipfs => console.log(`Debug: IPFS connection status: ${ipfs}`))\n    );\n\n  }\n\n  ngAfterViewInit() {\n\n    this.account$ = this.store.pipe(select(fromRoot.getAccount)).pipe(\n      // filter(account => !!account),\n      tap(account => {\n        console.log(`Debug: got account: ${account}`);\n        this.blockyRef.nativeElement.src = create({ seed: account, size: 8, scale: 4 }).toDataURL();\n      })\n    );\n  }\n\n}\n","export default \"\\n/* trying to kill .mat-snack-bar-container padding(14px 24px) */ \\n.mat-card {\\n    margin: -14px -24px;\\n    border: 2px solid white\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29yZS9jb21wb25lbnRzL3NuYWNrYmFyL3NuYWNrLWJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSwrREFBK0Q7QUFDL0Q7SUFDSSxtQkFBbUI7SUFDbkI7QUFDSiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvY29tcG9uZW50cy9zbmFja2Jhci9zbmFjay1iYXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLyogdHJ5aW5nIHRvIGtpbGwgLm1hdC1zbmFjay1iYXItY29udGFpbmVyIHBhZGRpbmcoMTRweCAyNHB4KSAqLyBcbi5tYXQtY2FyZCB7XG4gICAgbWFyZ2luOiAtMTRweCAtMjRweDtcbiAgICBib3JkZXI6IDJweCBzb2xpZCB3aGl0ZVxufVxuIl19 */\";","\nimport { Component, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\nimport { SnackBarInterface } from '../../models';\n\n@Component({\n    selector: 'app-snack-bar',\n    styleUrls: ['./snack-bar.component.css'],\n    templateUrl: './snack-bar.component.html'\n})\nexport class SnackBarComponent {\n    constructor(\n        @Inject(MAT_SNACK_BAR_DATA)\n        public data: SnackBarInterface) { }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found-page',\n  template: `\n    <mat-card>\n      <mat-card-title>404: Not Found</mat-card-title>\n      <mat-card-subtitle>\n        <p>Sorry! This page may not exist yet.</p>\n      </mat-card-subtitle>\n      <mat-card-actions>\n        <button mat-raised-button color=\"warn\" routerLink=\"/\">Back To Home</button>\n      </mat-card-actions>\n    </mat-card>\n  `,\n  styles: [\n    `\n      :host {\n        text-align: center;\n      }\n    `,\n  ],\n})\nexport class NotFoundPageComponent {}\n","\nimport { NgModule, Optional, SkipSelf, ErrorHandler } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n// NgRx\nimport * as fromRootStore from './store';\nimport { ROOT_REDUCERS, metaReducers } from './store/reducers';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { StoreRouterConnectingModule, RouterState } from '@ngrx/router-store';\n\nimport { AppErrorHandler } from './services/app-error-handler.service';\nimport { MaterialModule, FlexLayoutModule, AngularCdkModule } from '../shared';\n\nimport { MatSpinner } from '@angular/material/progress-spinner';\nimport { NavComponent } from './components/nav/nav.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\n// import { LoaderComponent } from './components/loader/loader.component';\nimport { SnackBarComponent } from './components/snackbar/snack-bar.component';\nimport { NotFoundPageComponent } from './containers/not-found-page.component';\nimport { ConfirmDialogComponent } from './components/confirm-dialog/confirm-dialog.component';\nimport { HttpErrorInterceptor } from './services/http-error.interceptor';\n\nexport const COMPONENTS = [\n  NavComponent,\n  NotFoundPageComponent,\n  DashboardComponent,\n  // LoaderComponent, - we don't use it\n  SnackBarComponent,\n  ConfirmDialogComponent\n\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MaterialModule,\n    FlexLayoutModule,\n    AngularCdkModule,\n\n\n    /**\n     * StoreModule.forRoot is imported once in the root module, accepting a reducer\n     * function or object map of reducer functions. If passed an object of\n     * reducers\n     * In the V9, two of these runtime checks, strictStateImmutability, and strictActionImmutability\n     *  are now enabled by default in development,\n     * so developers can be assured that their state following immutable practices out of the box.\n     */\n    StoreModule.forRoot(ROOT_REDUCERS, {\n      metaReducers,\n    }),\n\n    // @ngrx/router-store keeps router state up-to-date in the store.\n    StoreRouterConnectingModule.forRoot({\n      stateKey: 'router',\n      routerState: RouterState.Minimal,\n    }),\n\n    /**\n     * Store devtools instrument the store retaining past versions of state\n     * and recalculating new states. This enables powerful time-travel\n     * debugging.\n     *\n     * To use the debugger, install the Redux Devtools extension for either\n     * Chrome or Firefox\n     *\n     * See: https://github.com/zalmoxisus/redux-devtools-extension\n     */\n    // Instrumentation must be imported after importing StoreModule (config is optional)\n    StoreDevtoolsModule.instrument({\n      name: 'FleaMarket DApp Store State',\n      // In a production build you would want to disable the Store Devtools\n      // logOnly: environment.production,\n    }),\n\n    /**\n     * EffectsModule.forRoot() is imported once in the root module and\n     * sets up the effects class to be initialized immediately when the\n     * application starts.\n     *\n     * See: https://ngrx.io/guide/effects#registering-root-effects\n     */\n    EffectsModule.forRoot(fromRootStore.effects),\n\n  ],\n  declarations: COMPONENTS,\n  exports: COMPONENTS,\n\n  /**\n   * An entry component is any component that Angular loads imperatively,\n   *  (which means you’re not referencing it in the template)\n   * In out case these components will be use in the effects, so they are have to be declared\n   * as entry components\n   */\n  entryComponents: [\n    SnackBarComponent,\n    ConfirmDialogComponent,\n    MatSpinner\n  ],\n  providers: [\n    // register the GlobalErrorHandler provider\n    { provide: ErrorHandler, useClass: AppErrorHandler },\n    { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true },\n  ],\n})\nexport class CoreModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: CoreModule\n  ) {\n\n    if (parentModule) {\n      throw new Error('CoreModule is already loaded. Import only in AppModule');\n    }\n\n  }\n\n}\n","\nimport { MetaMaskConnectGuard} from './metamask-connect.guard';\nimport { IpfsConnectGuard } from './ipfs-connect.guard';\n\nexport const guards: any[] = [MetaMaskConnectGuard, IpfsConnectGuard];\n\nexport * from './metamask-connect.guard';\nexport * from './ipfs-connect.guard';\n","\n\nimport { Injectable } from '@angular/core';\nimport { CanLoad } from '@angular/router';\nimport { Store, select } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { take, tap, filter, switchMap, catchError } from 'rxjs/operators';\nimport * as fromRoot from '../store';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IpfsConnectGuard implements CanLoad {\n  constructor(private store: Store<fromRoot.AppState>) { }\n\n  canLoad(): Observable<boolean> {\n    return this.store.pipe(\n      select(fromRoot.getIpfsConnectStatus),\n      tap(connected => {\n        if (!connected) {\n          this.store.dispatch(fromRoot.ErrorActions.errorMessage({ errorMsg: `Unable to detect IPFS node.` }));\n          this.store.dispatch(fromRoot.IpfsDaemonActions.ipfsConnectRedirect());\n          return false;\n        }\n        return true;\n      }),\n      take(1)\n    );\n  }\n\n\n}\n","\n\nimport { Injectable } from '@angular/core';\nimport { CanLoad } from '@angular/router';\nimport { Store, select } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { take, tap, filter, switchMap, catchError } from 'rxjs/operators';\nimport * as fromRoot from '../store';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MetaMaskConnectGuard implements CanLoad {\n  constructor(private store: Store<fromRoot.AppState>) { }\n\n  canLoad(): Observable<boolean> {\n    return this.store.pipe(\n      select(fromRoot.getEthereumConnected),\n      tap(connected => {\n        if (!connected) {\n          this.store.dispatch(fromRoot.ErrorActions.errorMessage({ errorMsg: `Unable to detect Ethereum account.` }));\n          this.store.dispatch(fromRoot.Web3GatewayActions.ethereumConnectRedirect());\n          return false;\n        }\n        return true;\n      }),\n      take(1)\n    );\n  }\n\n\n}\n","\nexport * from './nav.model';\nexport * from './snack-bar.model';\nexport * from './dialog-data.interface';\n","\nexport enum AppearanceColor {\n    Error = 'warn',\n    Success = 'accent',\n    Info = 'primary'\n}\n\nexport interface SnackBarInterface {\n    message: string;\n    color: AppearanceColor;\n}\n\n","// https://github.com/tomastrajan/angular-ngrx-material-starter\n// https://medium.com/@aleixsuau/error-handling-angular-859d529fa53a\n// https://medium.com/angular-in-depth/expecting-the-unexpected-best-practices-for-error-handling-in-angular-21c3662ef9e4\n// https://www.tektutorialshub.com/angular/error-handling-in-angular-applications/\n\nimport { ErrorHandler, Injectable, Injector } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { serializeError } from 'serialize-error';\nimport { SnackBarService } from './snack-bar.service';\nimport { AppearanceColor } from '../models';\n\n\n@Injectable({ providedIn: 'root' })\nexport class AppErrorHandler extends ErrorHandler {\n\n  // Error handling is important and it is loaded first.\n  // Because of this we should manually inject the services with Injector.\n  constructor(private injector: Injector) {\n    super();\n   }\n\n  handleError(error: Error | HttpErrorResponse) {\n\n    const notifier = this.injector.get(SnackBarService);\n    let message: string;\n\n    if (error instanceof HttpErrorResponse) {\n      // Server Error\n      message = error.message;\n    } else {\n      // Client Error\n      message = serializeError(error).message;\n    }\n\n    notifier.show({\n      message,\n      color: AppearanceColor.Error\n    });\n\n    // continue with the default global error handler\n    super.handleError(error);\n\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { ethers, utils, Signer } from 'ethers';\nimport { Observable, from } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { EthereumProviderToken } from './tokens';\n\n@Injectable({ providedIn: 'root' })\nexport class EthersWeb3ProviderService {\n\n  constructor(@Inject(EthereumProviderToken) private ethProvider) {\n    /*\n    I didnt want to initialize Web3Provider here, because if MetaMask has not been installed\n     the ethereum provider object  windows.ethereum will be null, and call to instantiate\n    Web3Provider will throw error. This error wil not be caught because the global error handler is not ready yet\n    due the fact that this service is { providedIn: 'root' } and is created during initialization of the app\n    */\n  }\n\n  // The following account will never be exposed \n  public getSelectedAddress(): Observable<string> {\n\n    const web3Provider:ethers.providers.JsonRpcProvider = new ethers.providers.Web3Provider(this.ethProvider);\n    const signer:Signer = web3Provider.getSigner();\n\n    return from(signer.getAddress()).pipe(\n      tap(address => console.log('account address', address))\n    );\n  }\n\n  public getNetwork(): Observable<string> {\n\n    const web3Provider: ethers.providers.JsonRpcProvider = new ethers.providers.Web3Provider(this.ethProvider);\n\n    return from(web3Provider.getNetwork()).pipe(\n      map(network => network.name),\n      tap(name => console.log(`network name: ${name}`))\n    );\n  }\n\n  public getBalance(): Observable<string> {\n\n    const web3Provider: ethers.providers.JsonRpcProvider = new ethers.providers.Web3Provider(this.ethProvider);\n    const signer: Signer = web3Provider.getSigner();\n\n    // getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber>;\n    return from(web3Provider.getBalance(signer.getAddress())).pipe(\n      tap(weiBalance => console.log('wei balance', weiBalance)),\n\n      map(weiBalance => utils.formatEther(weiBalance)),\n      tap(balance => console.log('eth balance', balance)),\n\n    );\n  }\n\n}\n","import { Injectable, Injector, ErrorHandler } from '@angular/core';\nimport {\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { tap, retry, catchError } from 'rxjs/operators';\n\n// Passes HttpErrorResponse to application global error handler */\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n  constructor(private injector: Injector) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    return next.handle(request).pipe(\n      retry(1), // retry one more time\n      catchError((err: HttpErrorResponse) => {\n\n        console.log('injector');\n        // here we inject the global ErrorHandler\n        // which will use our custom global error handler AppErrorHandler\n        const appErrorHandler = this.injector.get(ErrorHandler);\n        appErrorHandler.handleError(err);\n        return throwError(err);\n      })\n    )\n  }\n\n}\n\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, from, empty, defer, of } from 'rxjs';\nimport { switchMap, map, tap } from 'rxjs/operators';\nimport { ipfsToken } from './tokens';\nimport { Buffer } from 'buffer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IpfsDaemonService {\n  constructor(@Inject(ipfsToken) private ipfs, private httpClient: HttpClient) { }\n\n  public getId(): Observable<string> {\n    return from(this.ipfs.id()).pipe(\n      tap((res: any) =>\n        console.log(`IPFS node id object: ${JSON.stringify(res)}`)\n      ),\n      map(res => res.id)\n    );\n  }\n\n  public getVersion(): Observable<string> {\n    return from(this.ipfs.version()).pipe(\n      tap((res: any) =>\n        console.log(`IPFS node version object: ${JSON.stringify(res)}`)\n      ),\n      map(res => res.version)\n    );\n  }\n\n  public addFile(file: File): Observable<string> {\n\n    // based on https://github.com/multiformats/js-cid\n    const data = {\n      path: file.name,\n      content: file\n    };\n\n    const options = {\n      progress: (prog) => console.log(`progress report: ${prog}`)\n    };\n\n    const sz = defer(async () => {\n\n      let res;\n      for await (const result of this.ipfs.add(data, options)) {\n        res = result;\n      }\n\n      return res;\n    });\n\n    return sz.pipe(\n      tap((res: any) =>\n        console.log(`IPFS node response json: ${JSON.stringify(res)}`)\n      ),\n      map((res: any) => res.cid.toString())\n    );\n  }\n\n  public getFile(hash: string): Observable<Blob> {\n\n    // based on https://medium.com/@benlesh/rxjs-observable-interop-with-promises-and-async-await-bebb05306875\n    const sz = defer(async () => {\n\n      const chunks = []\n      for await (const chunk of this.ipfs.cat(hash)) {\n        chunks.push(chunk)\n      }\n\n      const buff = Buffer.concat(chunks);\n      return buff;\n    });\n\n    return sz.pipe(\n      switchMap((buffer: Buffer) => {\n        // based on https://mraddon.blog/2018/07/15/how-to-push-load-image-file-from-to-ipfs-using-javascript-examples-part-iv/\n        const byteString = buffer.toString('base64');\n\n        // idea based on https://stackoverflow.com/questions/16245767/creating-a-blob-from-a-base64-string-in-javascript\n        const url = `data:application/octet-stream;base64,${byteString}`;\n\n        // idea based on https://brianflove.com/2017/11/02/angular-http-client-blob/\n        return this.httpClient.get(url, {\n          responseType: 'blob'\n        });\n      }))\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { SnackBarComponent } from '../components/snackbar/snack-bar.component';\nimport { SnackBarInterface } from '../models';\n\n\n@Injectable({ providedIn: 'root' })\nexport class SnackBarService {\n\n  static readonly SNACKBAR_DELAY: number = 7000;\n\n  constructor(private matSnackBar: MatSnackBar) { }\n\n  show(messageInfo: SnackBarInterface): void {\n    this.matSnackBar.openFromComponent(SnackBarComponent, {\n      data: {\n        message: messageInfo.message,\n        color: messageInfo.color\n      },\n      duration: SnackBarService.SNACKBAR_DELAY,\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom'\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n// cdk\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { MatSpinner } from '@angular/material/progress-spinner';\n\nimport { Observable, Subject } from 'rxjs';\nimport { scan, map, distinctUntilChanged } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpinnerOverlayService {\n\n    private spinnerTopRef: OverlayRef;\n    private spin$: Subject<number> = new Subject();\n\n    constructor(private overlay: Overlay) {\n\n        this.spinnerTopRef = this.overlay.create({\n            hasBackdrop: true,\n            positionStrategy: this.overlay.position()\n                .global()\n                .centerHorizontally()\n                .centerVertically()\n        });\n\n        this.spin$\n            .asObservable()\n            .pipe(\n                /*\n                Combines together all values emitted on the source,\n                using an accumulator function that knows how to join a new source value\n                into the accumulation from the past.\n                */\n                scan((acc, next) => {\n                    // The (!) operator reverses the logical (true or false)\n                    // !0 - is true,  (!5) is false\n                    if (!next) {\n                        return 0;\n                    }\n                    return (acc + next) >= 0 ? acc + next : 0;\n                }, 0),\n\n                map(val => val > 0),\n                distinctUntilChanged()\n            )\n            .subscribe(\n                (res) => {\n                    if (res) {\n                        this.spinnerTopRef.attach(new ComponentPortal(MatSpinner));\n                    } else if (this.spinnerTopRef.hasAttached()) {\n                        this.spinnerTopRef.detach();\n                    }\n                }\n            );\n    }\n\n    show = () => this.spin$.next(1);\n\n    hide = () => this.spin$.next(-1);\n\n    reset = () => this.spin$.next(0);\n\n}\n","import { InjectionToken} from '@angular/core';\n\nexport const EthereumProviderToken = new InjectionToken(\n    'Ethereum provider',\n    {\n        providedIn: 'root',\n        factory: () => (window as any).ethereum\n    }\n);\n","export * from './ethereum-provider-token';\nexport * from './window-token';\nexport * from './ipfs-token';\n","\nimport { InjectionToken } from '@angular/core';\nimport IpfsHttpClient from 'ipfs-http-client';\n\nexport const ipfsToken = new InjectionToken('The IPFS Token', {\n  providedIn: 'root',\n\n  // safe to put in the 'root',as it\n  // will not throw any error until we call IPFS API\n  factory: () => new IpfsHttpClient({\n    host: 'ipfs.infura.io',\n    port: '5001',\n    protocol: 'https'\n  })\n\n});\n\n","\nimport { InjectionToken } from '@angular/core';\n\nexport const windowRefToken = new InjectionToken<Window>(\n  'Native window object',\n  {\n    providedIn: 'root',\n    factory: () => window\n  }\n);\n\n\n","\nimport { createAction, props } from '@ngrx/store';\n\nexport const errorMessage = createAction('[Error] Error Message',  props<{ errorMsg: string }>());\n\n\n","import * as SpinnerActions from './spinner.actions';\nimport * as ErrorActions from './error.actions';\nimport * as SnackBarActions from './snack-bar.action';\nimport * as Web3GatewayActions from './web3-gateway.actions';\nimport * as IpfsDaemonActions from './ipfs-daemon.actions';\n\nexport { SpinnerActions, ErrorActions, SnackBarActions, Web3GatewayActions, IpfsDaemonActions };\n","\nimport { createAction} from '@ngrx/store';\n\nexport const connectSuccess = createAction('[IPFS/Daemon] Connect Success');\nexport const ipfsConnectRedirect = createAction('[IPFS/Daemon] IPFS Connect Redirect');\n\n","\nimport { createAction, props } from '@ngrx/store';\nimport { SnackBarInterface } from '../../models';\n\nexport const open = createAction('[SnackBar] Open', props<{ payload: SnackBarInterface }>());\n","\nimport { createAction} from '@ngrx/store';\n\nexport const show = createAction('[Spinner] Show');\nexport const hide = createAction('[Spinner] Hide');\n","\nimport { createAction, props } from '@ngrx/store';\n\nexport const ethereumInject = createAction('[Web3/Gateway] Ethereum Inject');\nexport const ethereumInjectSuccess = createAction('[Web3/Gateway] Ethereum Inject Success');\n\nexport const ethereumConnect = createAction('[Web3/Gateway] Ethereum Connect');\nexport const ethereumConnectSuccess = createAction('[Web3/Gateway] Ethereum Connect Success');\n\nexport const ethereumDisconnect = createAction('[Web3/Gateway] Ethereum Disconnect');\nexport const ethereumDisconnectSuccess = createAction('[Web3/Gateway] Ethereum Disconnect Success');\n\nexport const getNetwork = createAction('[Web3/Gateway] Ethereum Network Request');\nexport const networkSuccess = createAction('[Web3/Gateway] Ethereum Network Success', props<{ network: string }>());\n\nexport const getAccount = createAction('[Web3/Gateway] Selected Account Request');\nexport const accountSuccess = createAction('[Web3/Gateway] Selected Account Success', props<{ address: string }>());\n\nexport const getBalance = createAction('[Web3/Gateway] Balance Request');\nexport const balanceSuccess = createAction('[Web3/Gateway] Balance Success', props<{ balance: string }>());\n\nexport const ethereumConnectRedirect = createAction('[Web3/Gateway] Ethereum Connect Redirect');\n","import { Injectable } from '@angular/core';\n\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\nimport { tap, map } from 'rxjs/operators';\n\nimport { ErrorActions, SnackBarActions } from '../actions';\nimport { AppearanceColor, SnackBarInterface } from '../../models';\n\n\n\n@Injectable()\nexport class ErrorEffects {\n\n    constructor(private readonly actions$: Actions) {\n    }\n\n    handleError$ = createEffect(\n      () =>\n        this.actions$.pipe(\n          ofType(ErrorActions.errorMessage),\n          map(action => action.errorMsg),\n          tap(errorMsg => console.error('Got error:', errorMsg)),\n          map(errorMsg => {\n\n            const msg: SnackBarInterface = {\n              message: errorMsg,\n              color: AppearanceColor.Error\n          };\n\n            return SnackBarActions.open({payload: msg});\n          } )\n        )\n\n    );\n\n}\n","import { ErrorEffects } from './error.effects';\nimport { SnackBarEffects } from './snack-bar.effects';\nimport { Web3GatewayEffects } from './web3-gateway.effects';\nimport { IpfsDaemonEffects } from './ipfs-daemon.effects';\nimport { SpinnerEffects } from './spinner.effects';\n\nexport const effects: any[] = [ErrorEffects, SnackBarEffects, SpinnerEffects,\n    Web3GatewayEffects, IpfsDaemonEffects];\n\nexport * from './error.effects';\nexport * from './snack-bar.effects';\nexport * from './web3-gateway.effects';\nexport * from './ipfs-daemon.effects';\nexport * from './spinner.effects';\n","import { Injectable } from '@angular/core';\nimport { Actions, ofType, createEffect, ROOT_EFFECTS_INIT } from '@ngrx/effects';\nimport { serializeError } from 'serialize-error';\nimport { of } from 'rxjs';\nimport { switchMap, map, tap, catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\nimport { IpfsDaemonService } from '../../services/ipfs-daemon.services';\nimport { IpfsDaemonActions, ErrorActions } from '../actions';\n\n@Injectable()\nexport class IpfsDaemonEffects {\n  constructor(\n    private ipfsSrv: IpfsDaemonService,\n    private readonly actions$: Actions,\n    private router: Router,\n  ) { }\n\n  onConnect$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        /*\n  After all the root effects have been added, the root effect dispatches a ROOT_EFFECTS_INIT action.\n  You can see this action as a lifecycle hook, which you can use in order to execute some code after\n  all your root effects have been added.\n  */\n        ofType(ROOT_EFFECTS_INIT),\n        switchMap(() =>\n          this.ipfsSrv.getVersion().pipe(\n            tap(version => console.log(`IPFS node version: ${version}`)),\n            map(_ => IpfsDaemonActions.connectSuccess()),\n            catchError((err: Error) => of(this.handleError(err)))\n          )\n        )\n      )\n  );\n\n  connectRedirect$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(IpfsDaemonActions.ipfsConnectRedirect),\n        tap(_ => {\n          this.router.navigate(['/']);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  private handleError(error: Error) {\n    const friendlyErrorMessage = serializeError(error).message;\n    return ErrorActions.errorMessage({ errorMsg: friendlyErrorMessage });\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\nimport { tap, map } from 'rxjs/operators';\n\nimport { SnackBarActions } from '../actions';\nimport { SnackBarService } from '../../services/snack-bar.service';\n\n\n@Injectable()\nexport class SnackBarEffects {\n\n  static readonly SNACKBAR_DELAY: number = 7000;\n\n  constructor(private readonly actions$: Actions, private notifier: SnackBarService) { }\n\n  openSnackbar$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(SnackBarActions.open),\n        map(action => action.payload),\n        tap(payload => this.notifier.show(payload))\n      ),\n    { dispatch: false }\n\n  );\n}\n","import { Injectable } from '@angular/core';\nimport { createEffect } from '@ngrx/effects';\nimport { tap, map } from 'rxjs/operators';\nimport * as fromStore from '../reducers';\nimport { Store, select } from '@ngrx/store';\nimport { SpinnerOverlayService } from '../../services/spinner-overlay.service';\n\n\n@Injectable()\nexport class SpinnerEffects {\n\n    constructor(\n      private store$: Store<fromStore.AppState>,\n      private spinner: SpinnerOverlayService) {}\n\n    handleSpinner$ = createEffect(\n      () =>\n        this.store$.pipe(\n          select(fromStore.getSpinnerShow),\n          tap( isShow =>\n            isShow ? this.spinner.show() : this.spinner.hide()\n        )),\n        { dispatch: false }\n\n    );\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { serializeError } from 'serialize-error';\nimport { Router } from '@angular/router';\nimport { of, from, fromEvent, EMPTY as empty, Observable } from 'rxjs';\nimport { exhaustMap, switchMap, map, tap, catchError, withLatestFrom, filter } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\nimport { Actions, ofType, createEffect, ROOT_EFFECTS_INIT } from '@ngrx/effects';\nimport { Store, select } from '@ngrx/store';\nimport * as fromStore from '../reducers';\n\nimport { EthereumProviderToken } from '../../services/tokens';\nimport { EthersWeb3ProviderService } from '../../services/ethers-web3-provider-service';\nimport { Web3GatewayActions, SpinnerActions, ErrorActions } from '../actions';\nimport { utils } from 'ethers';\n\n@Injectable()\nexport class Web3GatewayEffects {\n  constructor(\n    @Inject(EthereumProviderToken) private ethProvider,\n    private readonly actions$: Actions,\n    private store$: Store<fromStore.AppState>,\n    private router: Router,\n    private web3ProviderSrv: EthersWeb3ProviderService,\n    @Inject(DOCUMENT) private document: Document\n  ) { }\n\n\n  // ethereum.enable() will be Deprecated\n  /*\n  metaMaskEnable$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(Web3ProviderActions.init),\n      exhaustMap(() => {\n        if ('enable' in this.web3Token) {\n\n          // ethereum.enable(): Requests the user provides an ethereum address to be identified by.\n          // Returns a promise of an array of hex-prefixed ethereum address strings.\n          return from(this.web3Token.enable()).pipe(\n            tap((ethAccounts: string[]) =>\n              console.log(\n                'Ethereum provider has been granted access to the following accounts',\n                ethAccounts\n              )\n            ),\n            map((ethAccounts: string[]) => {\n              if (ethAccounts.length === 0) {\n                return ErrorActions.errorMessage({\n                  errorMsg: 'Can not get any user accounts'\n                });\n              }\n\n              return Web3ProviderActions.initSuccess();\n            }),\n\n            // User denied account access\n            catchError((err: Error) =>\n              of(this.handleError(err), SpinnerActions.hide())\n            )\n          );\n        }\n\n        return empty;\n      })\n    )\n  );\n  */\n\n  // only allow MetaMask\n  /*\n  After all the root effects have been added, the root effect dispatches a ROOT_EFFECTS_INIT action.\n  You can see this action as a lifecycle hook, which you can use in order to execute some code after\n   all your root effects have been added.\n  */\n  ethereumInject$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ROOT_EFFECTS_INIT),\n      map(() => {\n\n        // https://gist.github.com/rekmarks/d318677c8fc89e5f7a2f526e00a0768a\n        // Returns true or false, representing whether the user has MetaMask installed.\n        if (!this.ethProvider || !this.ethProvider.isMetaMask) {\n          return ErrorActions.errorMessage({ errorMsg: `Please install MetaMask.` });\n        }\n        return Web3GatewayActions.ethereumInjectSuccess();\n      })\n    )\n  );\n\n\n  ethereumConnect$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(Web3GatewayActions.ethereumConnect),\n      exhaustMap(() => {\n\n        // This is equivalent to ethereum.enable()\n        // return list of user account\n        // currently only ever one: accounts[0]\n        return from(this.ethProvider.send('eth_requestAccounts')).pipe(\n          // You now have an array of accounts!\n          // Currently only ever one:\n          // { id: 1, jsonrpc: \"2.0\", result: ['0xFDEa65C8e26263F6d9A1B5de9555D2931A33b825']}\n          map((ethAccounts: any[]) => {\n            if (ethAccounts.length === 0) {\n              return ErrorActions.errorMessage({ errorMsg: `Can't get any user accounts` });\n            }\n            console.log(`Ethereum provider has been granted access to the following account:`, ethAccounts[0]);\n            return Web3GatewayActions.ethereumConnectSuccess();\n          }),\n          // User denied account access\n          catchError((err: Error) => of(this.handleError(err), SpinnerActions.hide()) )\n        );\n\n      })\n    )\n  );\n\n  ethereumDisconnect$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(Web3GatewayActions.ethereumDisconnect),\n      map(() => {\n\n        /*\n         window.ethereum.disable() for logging out of provider\n         This future is not implemented yet. See discussion here:\n         https://ethereum-magicians.org/t/window-ethereum-disable-for-logging-out-of-provider/3630\n         https://ethereum-magicians.org/t/eip-1102-opt-in-provider-access/414/59\n        */\n        return ErrorActions.errorMessage({ errorMsg: `This feature is in a suggested proposal yet.` });\n\n      })\n    )\n  );\n\n\n  connectRedirect$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(Web3GatewayActions.ethereumConnectRedirect),\n        tap(_ => {\n          this.router.navigate(['/']);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  showSpinner$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(Web3GatewayActions.ethereumConnect),\n      map(() => SpinnerActions.show())\n    )\n  );\n\n  hideSpinner$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(Web3GatewayActions.ethereumConnectSuccess),\n      map(() => SpinnerActions.hide())\n    )\n  );\n\n  getAccountInfo$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(Web3GatewayActions.ethereumConnectSuccess),\n      switchMap(() => {\n        return [Web3GatewayActions.getNetwork(), Web3GatewayActions.getAccount(), Web3GatewayActions.getBalance()];\n\n      })\n    )\n  );\n\n  getAddress$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(Web3GatewayActions.getAccount),\n      switchMap(() =>\n        this.web3ProviderSrv.getSelectedAddress().pipe(\n          map((address: string) => Web3GatewayActions.accountSuccess({ address })),\n          catchError((err: Error) => of(this.handleError(err)))\n        )\n      )\n    )\n  );\n\n  getBalance$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(Web3GatewayActions.getBalance),\n      switchMap(() =>\n        this.web3ProviderSrv.getBalance().pipe(\n          map((balance: string) =>\n            Web3GatewayActions.balanceSuccess({ balance })\n          ),\n          catchError((err: Error) => of(this.handleError(err)))\n        )\n      )\n    )\n  );\n\n  getNetwork$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(Web3GatewayActions.getNetwork),\n      switchMap(() =>\n        this.web3ProviderSrv.getNetwork().pipe(\n          map((network: string) =>\n            Web3GatewayActions.networkSuccess({ network })\n          ),\n          catchError((err: Error) => of(this.handleError(err)))\n        )\n      )\n    )\n  );\n\n\n  // example of using native events\n  /*\n  resize$ = createEffect(\n    () =>\n    fromEvent(window, 'resize').pipe(\n      tap(event => console.log( 'event', event) )\n      ),\n      { dispatch: false }\n  );\n\n  // output\n  // event, Event {isTrusted: true, type: \"resize\", target: Window, currentTarget: Window, eventPhase: 2, …}\n  */\n\n  // based on https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md#chainchanged\n  // and https://gist.github.com/rekmarks/d318677c8fc89e5f7a2f526e00a0768a\n  // Note that this event is emitted on:\n  // - page load\n  // - when log out from MetaMask\n  // - when we switch account or network in MetaMask\n\n  // ** If the array of accounts is non-empty, you're already connected.\n\n  accountWatcher$ = !!this.ethProvider ? fromEvent(this.ethProvider, 'accountsChanged').pipe(\n    withLatestFrom(this.store$.pipe(select(fromStore.getAccount))),\n\n    // we only want to refresh the browser when:\n    // - we logout from MetaMask (accounts.length == 0)\n    // - when we switch account to different account (!!currentAccount && currentAccount !== accounts[0])\n    filter(([accounts, currentAccount]) => {\n\n      if ((accounts as any).length === 0)\n        return true;\n\n      /*\n     I notice that using ethers.js it returns account in the hex string like this\n      0xd64d1cc32225bd5815cfa7a0b8a6aa46e0ef1285\n      but from the event 'accountsChanged' it return the same account hex string like this:\n      0xd64D1cc32225bD5815cFA7A0B8a6aa46e0eF1285\n      !Notice the capital letters. So we should take care of this situation\n    */\n\n      const curAdd = currentAccount ? utils.getAddress(currentAccount) : currentAccount;\n      const newAdd = accounts[0] ? utils.getAddress(accounts[0]) : accounts[0];\n\n      if (!!curAdd && (curAdd !== newAdd)) {\n        return true;\n      }\n\n      return false;\n    }),\n    map(([accounts, currentAccount]) => {\n      // we need to reload browser\n      // based onhttps://medium.com/metamask/no-longer-reloading-pages-on-network-change-fbf041942b44\n      this.document.location.reload();\n    })\n  ) : of(1);\n\n  accountChanged$ = createEffect(\n    () => this.accountWatcher$,\n    { dispatch: false }\n  );\n\n\n  private handleError(error: Error) {\n    const friendlyErrorMessage = serializeError(error).message;\n    return ErrorActions.errorMessage({ errorMsg: friendlyErrorMessage });\n  }\n\n\n}\n","export * from './reducers';\nexport * from './actions';\nexport * from './effects';\n","import { createReducer, on } from '@ngrx/store';\nimport { ErrorActions } from '../actions';\n\nexport interface ErrorState {\n  error: string | null;\n}\n\nconst initialState: ErrorState = {\n  error: null\n};\n\nexport const reducer = createReducer(\n  initialState,\n  on(ErrorActions.errorMessage, (state, { errorMsg }) => ({\n    ...state,\n     error: errorMsg\n    })),\n);\n\nexport const getError = (state: ErrorState) => state.error;\n\n","\nimport {\n  createSelector,\n  createFeatureSelector,\n  ActionReducer,\n  MetaReducer,\n  Action,\n  ActionReducerMap,\n} from '@ngrx/store';\nimport { InjectionToken } from '@angular/core';\nimport * as fromRouter from '@ngrx/router-store';\n\nimport { environment } from '../../../../environments/environment';\nimport * as fromSpinner from './spinner.reducer';\nimport * as fromError from './error.reducer';\nimport * as fromWeb3Gateway from './web3-gateway.reducer';\nimport * as fromIpfsDaemon from './ipfs-daemon.reducer';\n\n\n// nice moment here\n// here is our root state, which also includes the route state\nexport interface AppState {\n  router: fromRouter.RouterReducerState<any>;\n  spinner: fromSpinner.SpinnerState;\n  error: fromError.ErrorState;\n  web3Provider: fromWeb3Gateway.Web3GatewayState;\n  ipfsDaemon: fromIpfsDaemon.IpfsDaemonState;\n\n}\n\n/**\n * Our state is composed of a map of action reducer functions.\n * These reducer functions are called with each dispatched action\n * and the current or initial state and return a new immutable state.\n */\nexport const ROOT_REDUCERS =\n  new InjectionToken<ActionReducerMap<AppState, Action>>('Root reducers token', {\n  factory: () => ({\n    router: fromRouter.routerReducer,\n    spinner: fromSpinner.reducer,\n    error: fromError.reducer,\n    web3Provider: fromWeb3Gateway.reducer,\n    ipfsDaemon: fromIpfsDaemon.reducer\n\n  }),\n});\n\n// console.log all actions\nexport function logger(reducer: ActionReducer<AppState>): ActionReducer<AppState> {\n  return (state, action) => {\n    const result = reducer(state, action);\n    console.groupCollapsed(action.type);\n    console.log('prev state', state);\n    console.log('action', action);\n    console.log('next state', result);\n    console.groupEnd();\n\n    return result;\n  };\n}\n\n/**\n * By default, @ngrx/store uses combineReducers with the reducer map to compose\n * the root meta-reducer. To add more meta-reducers, provide an array of meta-reducers\n * that will be composed to form the root meta-reducer.\n */\nexport const metaReducers: MetaReducer<AppState>[] = !environment.production\n  ? [logger]\n  : [];\n\nexport const selectRouterState = createFeatureSelector<AppState,\n  fromRouter.RouterReducerState<any>>('router');\n\nexport const {\n  selectQueryParams,    // select the current route query params\n  selectRouteParams,    // select the current route params\n  selectRouteData,      // select the current route data\n  selectUrl,            // select the current url\n} = fromRouter.getSelectors(selectRouterState);\n\n\nexport const selectSpinnerState = createFeatureSelector<AppState, fromSpinner.SpinnerState>(\n  'spinner'\n);\nexport const getSpinnerShow = createSelector(\n  selectSpinnerState,\n  fromSpinner.getSpinnerShow\n);\n\n\nexport const selectErrorState = createFeatureSelector<AppState, fromError.ErrorState>(\n  'error'\n);\n\nexport const getError = createSelector(\n  selectErrorState,\n  fromError.getError\n);\n\nexport const selectWeb3GatewayState = createFeatureSelector<AppState, fromWeb3Gateway.Web3GatewayState>(\n  'web3Provider'\n);\n\nexport const getEthereumInjected = createSelector(\n  selectWeb3GatewayState,\n  fromWeb3Gateway.getEthereumInjected\n);\n\nexport const getEthereumConnected = createSelector(\n  selectWeb3GatewayState,\n  fromWeb3Gateway.getEthereumConnected\n);\n\nexport const getAccount = createSelector(\n  selectWeb3GatewayState,\n  fromWeb3Gateway.getAccount\n);\n\nexport const getNetwork = createSelector(\n  selectWeb3GatewayState,\n  fromWeb3Gateway.getNetwork\n);\n\nexport const getBalance = createSelector(\n  selectWeb3GatewayState,\n  fromWeb3Gateway.getBalance\n);\n\nexport const selectIpfsDaemonState = createFeatureSelector<AppState, fromIpfsDaemon.IpfsDaemonState>(\n  'ipfsDaemon'\n);\nexport const getIpfsConnectStatus = createSelector(\n  selectIpfsDaemonState,\n  fromIpfsDaemon.getIpfsConnectStatus\n);\n","import { createReducer, on } from '@ngrx/store';\nimport { IpfsDaemonActions } from '../actions';\n\nexport interface IpfsDaemonState {\n  connectStatus: boolean;\n}\n\nconst initialState: IpfsDaemonState = {\n  connectStatus: false,\n};\n\nexport const reducer = createReducer(\n  initialState,\n  on(IpfsDaemonActions.connectSuccess, state => ({\n    ...state,\n    connectStatus: true\n  })),\n);\n\nexport const getIpfsConnectStatus = (state: IpfsDaemonState) =>\n  state.connectStatus;\n","import { createReducer, on } from '@ngrx/store';\nimport { SpinnerActions } from '../actions';\n\nexport interface SpinnerState {\n  show: boolean;\n}\n\nconst initialState: SpinnerState = {\n  show: false\n};\n\nexport const reducer = createReducer(\n  initialState,\n    on(SpinnerActions.show, state => ({\n      ...state,\n      show: true\n    })),\n\n    on(SpinnerActions.hide, state => ({\n      ...state,\n      show: false,\n    })),\n);\n\n\nexport const getSpinnerShow = (state: SpinnerState) => state.show;\n\n\n","import { createReducer, on } from '@ngrx/store';\nimport { Web3GatewayActions } from '../actions';\n\nexport interface Web3GatewayState {\n  ethereumInjected: boolean;  // check if MetaMask installed\n  ethereumConnected: boolean;  // check if the user has any Ethereum account connected throw MetaMask\n  account: string;\n  ethereumNetwork: string;\n  balance: string;\n}\n\nconst initialState: Web3GatewayState = {\n  ethereumInjected: false,\n  ethereumConnected: false,\n  ethereumNetwork: null,\n  account: null,\n  balance: null\n};\n\nexport const reducer = createReducer(\n  initialState,\n  on(Web3GatewayActions.ethereumInjectSuccess, state => ({\n    ...state,\n    ethereumInjected: true\n  })),\n  on(Web3GatewayActions.ethereumConnectSuccess, state => ({\n    ...state,\n    ethereumConnected: true\n  })),\n  on(Web3GatewayActions.networkSuccess, (state, { network }) => ({\n    ...state,\n    ethereumNetwork: network\n  })),\n  on(Web3GatewayActions.accountSuccess, (state, { address }) => ({\n    ...state,\n    account: address\n  })),\n  on(Web3GatewayActions.balanceSuccess, (state, { balance }) => ({\n    ...state,\n    balance\n  }))\n);\n\nexport const getEthereumInjected = (state: Web3GatewayState) =>\n  state.ethereumInjected;\nexport const getEthereumConnected = (state: Web3GatewayState) =>\n  state.ethereumConnected;\nexport const getNetwork = (state: Web3GatewayState) => state.ethereumNetwork;\nexport const getAccount = (state: Web3GatewayState) => state.account;\nexport const getBalance = (state: Web3GatewayState) => state.balance;\n","import { Injectable, NgZone } from '@angular/core';\nimport { User } from \"../../shared/services/user\";\nimport auth from 'firebase/firebase-auth'\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  userData: any; // Save logged in user data\n\n  constructor(\n    public afs: AngularFirestore,   // Inject Firestore service\n    public afAuth: AngularFireAuth, // Inject Firebase auth service\n    public router: Router,  \n    public ngZone: NgZone // NgZone service to remove outside scope warning\n  ) {    \n    /* Saving user data in localstorage when \n    logged in and setting up null when logged out */\n    this.afAuth.authState.subscribe(user => {\n      if (user) {\n        this.userData = user;\n        localStorage.setItem('user', JSON.stringify(this.userData));\n        JSON.parse(localStorage.getItem('user'));\n      } else {\n        localStorage.setItem('user', null);\n        JSON.parse(localStorage.getItem('user'));\n      }\n    })\n  }\n\n  // Sign in with email/password\n  SignIn(email, password) {\n    return this.afAuth.signInWithEmailAndPassword(email, password)\n      .then((result) => {\n        this.ngZone.run(() => {\n          this.router.navigate(['dashboard']);\n        });\n        this.SetUserData(result.user);\n      }).catch((error) => {\n        window.alert(error.message)\n      })\n  }\n\n  // Sign up with email/password\n  SignUp(email, password) {\n    return this.afAuth.createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        /* Call the SendVerificaitonMail() function when new user sign \n        up and returns promise */\n        this.SetUserData(result.user);\n      }).catch((error) => {\n        window.alert(error.message)\n      })\n  }\n\n \n  // Reset Forggot password\n  ForgotPassword(passwordResetEmail) {\n    return this.afAuth.sendPasswordResetEmail(passwordResetEmail)\n    .then(() => {\n      window.alert('Password reset email sent, check your inbox.');\n    }).catch((error) => {\n      window.alert(error)\n    })\n  }\n\n  // Returns true when user is looged in and email is verified\n  get isLoggedIn(): boolean {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return (user !== null && user.emailVerified !== false) ? true : false;\n  }\n\n  // Sign in with Google\n  GoogleAuth() {\n    return this.AuthLogin(new auth.GoogleAuthProvider());\n  }\n\n  // Auth logic to run auth providers\n  AuthLogin(provider) {\n    return this.afAuth.signInWithPopup(provider)\n    .then((result) => {\n       this.ngZone.run(() => {\n          this.router.navigate(['dashboard']);\n        })\n      this.SetUserData(result.user);\n    }).catch((error) => {\n      window.alert(error)\n    })\n  }\n\n  /* Setting up user data when sign in with username/password, \n  sign up with username/password and sign in with social auth  \n  provider in Firestore database using AngularFirestore + AngularFirestoreDocument service */\n  SetUserData(user) {\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\n    const userData: User = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      emailVerified: user.emailVerified\n    }\n    return userRef.set(userData, {\n      merge: true\n    })\n  }\n\n  // Sign out \n  SignOut() {\n    return this.afAuth.signOut().then(() => {\n      localStorage.removeItem('user');\n      this.router.navigate(['sign-in']);\n    })\n  }\n\n}","\nimport { NgModule } from '@angular/core';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { OverlayModule } from '@angular/cdk/overlay';\n\nconst CDK_MODULES = [\n    LayoutModule, OverlayModule\n];\n\n@NgModule({\n    imports: CDK_MODULES,\n    exports: CDK_MODULES,\n    declarations: []\n\n})\nexport class AngularCdkModule { }\n","export * from './angular-sdk.module';\n","export  { FlexLayoutModule }  from '@angular/flex-layout';\n","export * from './material';\nexport * from './flex-layout';\nexport * from './angular-cdk';\n","export * from './material.module';\n","\n\nimport { NgModule } from '@angular/core';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n\nconst MAT_MODULES = [\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatBottomSheetModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n];\n\n@NgModule({\n    imports: MAT_MODULES,\n    exports: MAT_MODULES,\n    declarations: []\n\n})\nexport class MaterialModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n// export const environment = {\n//   production: false,\n//    fleaMarketContractAddress: '0x0f80Aad503240d1d0F7F415D33e8230FcaEDb036' \n\n// };\n\nexport const environment = {\n  production: false,\n  fleaMarketContractAddress: '0x0f80Aad503240d1d0F7F415D33e8230FcaEDb036',\n  firebase: {\n  apiKey: \"AIzaSyDBWuw6UUQYc7UooKibmgNG-D1uk5kIXds\",\n  authDomain: \"supply-tracker-89666.firebaseapp.com\",\n  databaseURL: \"https://supply-tracker-89666.firebaseio.com\",\n  projectId: \"supply-tracker-89666\",\n  storageBucket: \"supply-tracker-89666.appspot.com\",\n  messagingSenderId: \"813687406009\",\n  appId: \"1:813687406009:web:0e270ecd2f762f83744a68\",\n  measurementId: \"G-SSMCD3YZ38\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}